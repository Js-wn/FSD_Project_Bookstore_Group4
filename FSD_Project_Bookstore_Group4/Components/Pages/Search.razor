@page "/Search"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FSD_Project_Bookstore_Group4.Domain
@using FSD_Project_Bookstore_Group4.Data
@inject IDbContextFactory<FSD_Project_Bookstore_Group4.Data.FSD_Project_Bookstore_Group4Context> DbFactory

<PageTitle>Search</PageTitle>

<h1>Search</h1>
<div>
    <form action="/Search" data-enhance>
        <input type="search" name="titleFilter" />
        <input type="submit" value="Search" />
    </form>
</div>

<QuickGrid Class="table" Items="FilteredBooks">
    <PropertyColumn Title="Title" Sortable="true" Property="book => book.BookTitle" />
    <PropertyColumn Class="overflow-auto" Title="Description" Property="book => book.BookDesc" />
    <PropertyColumn Title="Published date" Format="yyyy-MM-dd" Property="book => book.BookPublishDate.Date" />
    <PropertyColumn Title="Price" Sortable="true" Format='c' Property="book => book.BookPrice" />
</QuickGrid>
@code {
    [SupplyParameterFromQuery]
    private string? TitleFilter { get; set; }

    private IQueryable<Book> FilteredBooks =>
        context.Book.Where(b => b.BookTitle!.Contains(TitleFilter ?? string.Empty));
    private FSD_Project_Bookstore_Group4Context context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
