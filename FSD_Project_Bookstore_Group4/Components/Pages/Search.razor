@page "/Search"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FSD_Project_Bookstore_Group4.Domain
@using FSD_Project_Bookstore_Group4.Data
@inject IDbContextFactory<FSD_Project_Bookstore_Group4.Data.FSD_Project_Bookstore_Group4Context> DbFactory

<PageTitle>Search</PageTitle>

<h1>Search</h1>
<div>
    <form action="/Search" data-enhance>
        <input type="search" name="titleFilter" />
        <input type="submit" value="Search" />
    </form>
</div>
<div class="grid">
    <QuickGrid Class="table" Items="FilteredBooks" @ref="grid" >
        <TemplateColumn Context="book" Title="Title" Class="w-10" >
            <a href="@($"fulldetails?id={book.Id}")">
            <img class=" mr-4" src="@book.ImgLink" width="200"/> <br />
            @book.BookTitle
            </a> <br />
            <p><strong>Price:</strong> $@book.BookPrice<br />
             <strong>Publish date:</strong>  @book.BookPublishDate.ToShortDateString() </p> <br />
            <button @onclick="@(() => Ordering(book))">ORDER NOW</button>
        </TemplateColumn>
        <TemplateColumn class="w-30" Context="book" Title="Description" >
            @book.BookDesc
        </TemplateColumn>
        @*<PropertyColumn Title="Title" Property="book => book.BookTitle" Sortable="true" InitialSortDirection="SortDirection.Ascending" IsDefaultSortColumn="true" />
        <PropertyColumn class="w-25" Title="Description" Property="book => book.BookDesc"/>
        <PropertyColumn class="w-2" Title="Published date" Sortable="true" Format="yyyy-MM-dd" Property="book => book.BookPublishDate.Date" />
        <PropertyColumn class="w-2" Title="Price" Sortable="true" Format='c' Property="book => book.BookPrice" />*@
    </QuickGrid>
</div>
@code {
    string message = string.Empty;
    QuickGrid<Book>? grid;
    [SupplyParameterFromQuery]
    private string? TitleFilter { get; set; }

    private IQueryable<Book> FilteredBooks =>
        context.Book.Where(b => b.BookTitle!.Contains(TitleFilter ?? string.Empty));
    private FSD_Project_Bookstore_Group4Context context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }
    void Ordering(Book b) => message = $"You want to order {b.BookTitle}";

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
