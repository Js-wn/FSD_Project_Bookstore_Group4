@page "/orderitems"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FSD_Project_Bookstore_Group4.Domain
@using FSD_Project_Bookstore_Group4.Data
@implements IAsyncDisposable
@inject IDbContextFactory<FSD_Project_Bookstore_Group4.Data.FSD_Project_Bookstore_Group4Context> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="orderitems/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.OrderItem">
    <PropertyColumn Property="orderitem => orderitem.OrderQty" />
    <PropertyColumn Property="orderitem => orderitem.OrderId" />
    <PropertyColumn Property="orderitem => orderitem.BookId" />
    <PropertyColumn Property="orderitem => orderitem.DateCreated" />
    <PropertyColumn Property="orderitem => orderitem.DateUpdate" />
    <PropertyColumn Property="orderitem => orderitem.CreatedBy" />
    <PropertyColumn Property="orderitem => orderitem.UpdatedBy" />

    <TemplateColumn Context="orderitem">
        <a href="@($"orderitems/edit?id={orderitem.Id}")">Edit</a> |
        <a href="@($"orderitems/details?id={orderitem.Id}")">Details</a> |
        <a href="@($"orderitems/delete?id={orderitem.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private FSD_Project_Bookstore_Group4Context context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
