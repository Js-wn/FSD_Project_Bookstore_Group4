@page "/bookgenres"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FSD_Project_Bookstore_Group4.Domain
@using FSD_Project_Bookstore_Group4.Data
@implements IAsyncDisposable
@inject IDbContextFactory<FSD_Project_Bookstore_Group4.Data.FSD_Project_Bookstore_Group4Context> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="bookgenres/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.BookGenre">
    <PropertyColumn Property="bookgenre => bookgenre.BookId" />
    <PropertyColumn Property="bookgenre => bookgenre.GenreId" />
    <PropertyColumn Property="bookgenre => bookgenre.DateCreated" />
    <PropertyColumn Property="bookgenre => bookgenre.DateUpdate" />
    <PropertyColumn Property="bookgenre => bookgenre.CreatedBy" />
    <PropertyColumn Property="bookgenre => bookgenre.UpdatedBy" />

    <TemplateColumn Context="bookgenre">
        <a href="@($"bookgenres/edit?id={bookgenre.Id}")">Edit</a> |
        <a href="@($"bookgenres/details?id={bookgenre.Id}")">Details</a> |
        <a href="@($"bookgenres/delete?id={bookgenre.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private FSD_Project_Bookstore_Group4Context context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
