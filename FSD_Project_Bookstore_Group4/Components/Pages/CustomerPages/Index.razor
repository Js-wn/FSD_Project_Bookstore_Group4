@page "/customers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FSD_Project_Bookstore_Group4.Domain
@using FSD_Project_Bookstore_Group4.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Forms
@implements IAsyncDisposable
@inject IDbContextFactory<FSD_Project_Bookstore_Group4.Data.FSD_Project_Bookstore_Group4Context> DbFactory
@inject NavigationManager Navigation
@inject UserManager<FSD_Project_Bookstore_Group4User> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize(Roles = "Administrator, User")]

<PageTitle>Index</PageTitle>

<h1>Index</h1>


<QuickGrid Class="table" Items="customerInfo.AsQueryable()">
    <PropertyColumn Property="customer => customer.CustomerFirstName" Title="FirstName" />
    <PropertyColumn Property="customer => customer.CustomerLastName" Title="LastName" />
    <PropertyColumn Property="customer => customer.CustomerEmail" Title="Email" />
    <PropertyColumn Property="customer => customer.CustomerAddress" Title="Address" />
    <PropertyColumn Property="customer => customer.CustomerContact" Title="Contact" />
    <PropertyColumn Property="customer => customer.CustomerPoints" Title="Points" />
    <PropertyColumn Property="customer => customer.HasActiveSubscription" Title="Has Active Subscription" />
    <PropertyColumn Property="customer => customer.Gender.GenderName" Title="Gender" />
    <PropertyColumn Property="customer => customer.DateCreated" />
    <PropertyColumn Property="customer => customer.DateUpdate" />
    <PropertyColumn Property="customer => customer.CreatedBy" />
    <PropertyColumn Property="customer => customer.UpdatedBy" />
    <TemplateColumn Context="customer">
        <a href="@($"customers/edit?id={customer.Id}")">Edit</a> |
        <a href="@($"customers/details?id={customer.Id}")">Details</a> |
        <AuthorizeView Roles="Administrator">
        <a href="@($"customers/delete?id={customer.Id}")">Delete</a> |
        </AuthorizeView>
        <a href="@($"orders?customerId={customer.Id}")">View Orders</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private FSD_Project_Bookstore_Group4Context context = default!;

    [Parameter]
    public int? CustomerId { get; set; }
    private int? loggedInCustomerId;
    private List<Customer> customerInfo = new();

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var userId = UserManager.GetUserId(user);

        var customer = await context.Customer.FirstOrDefaultAsync(c => c.AuthCustId == userId);
        loggedInCustomerId = customer?.Id;

        
        bool isAdmin = user.IsInRole("Administrator");

        
        if (isAdmin) //if admin see all cust details and pull Gender to call
        {
            customerInfo = await context.Customer
                .Include(c => c.Gender)
                .ToListAsync();
        }
        else //else cust sees logged in cust details and pull Gender to call
        {
            customerInfo = await context.Customer
                .Where(c => c.Id == loggedInCustomerId)
                .Include(c => c.Gender)
                .ToListAsync();
        }

    }


    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
