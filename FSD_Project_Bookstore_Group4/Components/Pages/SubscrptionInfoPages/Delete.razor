@page "/subscrptioninfos/delete"
@using Microsoft.EntityFrameworkCore
@using FSD_Project_Bookstore_Group4.Domain
@inject IDbContextFactory<FSD_Project_Bookstore_Group4.Data.FSD_Project_Bookstore_Group4Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>SubscrptionInfo</h2>
    <hr />
    @if (subscrptioninfo is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">DateStart</dt>
            <dd class="col-sm-10">@subscrptioninfo.DateStart</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateEnd</dt>
            <dd class="col-sm-10">@subscrptioninfo.DateEnd</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CutomerId</dt>
            <dd class="col-sm-10">@subscrptioninfo.CutomerId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TierId</dt>
            <dd class="col-sm-10">@subscrptioninfo.TierId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@subscrptioninfo.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdate</dt>
            <dd class="col-sm-10">@subscrptioninfo.DateUpdate</dd>
        </dl>
        <EditForm method="post" Model="subscrptioninfo" OnValidSubmit="DeleteSubscrptionInfo" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(subscrptioninfo is null)">Delete</button> |
            <a href="/subscrptioninfos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private SubscriptionInfo? subscrptioninfo;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        subscrptioninfo = await context.SubscrptionInfo.FirstOrDefaultAsync(m => m.Id == Id);

        if (subscrptioninfo is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteSubscrptionInfo()
    {
        using var context = DbFactory.CreateDbContext();
        context.SubscrptionInfo.Remove(subscrptioninfo!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/subscrptioninfos");
    }
}
